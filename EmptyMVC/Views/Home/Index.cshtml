@using Contracts

<script
    src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js">
</script>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.5.0/jquery.min.js"></script>

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>View inflation based on your consumption</p>
</div>

<canvas id="myChart" style="width:100%;max-width:700px"></canvas>
<canvas id="myChart2" style="width:100%;max-width:700px"></canvas>

@{
    SerieObservations inflationNumbers= Model.CalculateInflationRecursivelyFromProvidedLevels();
    var annualInflation = inflationNumbers.AnnualObservations;

    //for updating the chart
    //chartObject.data.datasets = newData.datasets;
    //chartObject.data.labels = newData.labels;
    //chartObject.update();
}

@{
    TreeNode<Category> root = Model;
}


<script type="text/javascript">

    var myArray = [];

    @foreach (var v in annualInflation)
    {
        @:myArray.push({x:"@v.Value._year",y:"@v.Value._percentChange"});
    }

var xyValues = [
{x:50, y:7},
{x:60, y:8},
];

new Chart("myChart", {
  type: "scatter",
  data: {
    datasets: [{
      pointRadius: 4,
      pointBackgroundColor: "rgb(0,0,255)",
      data: xyValues
    }]
  },
  options: {
    legend: {display: false},
    scales: {
      xAxes: [{ticks: {min: 40, max:160}}],
      yAxes: [{ticks: {min: 6, max:16}}],
    }
  }
});

new Chart("myChart2", {
type: "scatter",
data: {
datasets: [{
pointRadius: 4,
pointBackgroundColor: "rgb(0,0,255)",
data: myArray
}]
},
options: {
legend: {display: false},
scales: {
xAxes: [{ticks: {min: 1997, max:2022}}],
yAxes: [{ticks: {min: -5, max:10}}],
}
}
});

</script>


<button id="Normalize">Normalize</button>

<script>

document.getElementById("Normalize").addEventListener("click", function() 
{
@{ root.NormalizeWeights();} 
console.log("refresh the display");
});
</script>

<table id="tblCustomers" class="table" cellpadding="0" cellspacing="0">
    <tr>
        <th style="width:100px">Category Name</th>
        <th style="width:150px">Weight</th>
        <th style="width:150px"></th>
    </tr>
    @{

        var count = 0;
        var idButton = "";
        var idWeight = "";
        var newNumber = "";
        foreach (TreeNode<Category> node in Model.ListAll())
        {
            var cat = node.Value;

            <tr>
                @{
                    var spacing = "";
                    for (int i = 0; i < cat._depth; i++)
                    {
                        spacing += "  ";
                    }
                    var paddedName = spacing + @cat._name;
                }
                @{
                    idWeight = "Weight" + count;
                    idButton = "Button" + count;
                }
                <td class="Name">
                    <span>
                        <pre>@paddedName</pre></span>
                </td>
                <td contenteditable='true' class="Weight" id=@idWeight>
                    @cat.GetWeight
                </td>

                <td class="UpdateButton">
                <button id=@idButton>Update</button>


                <script>
                document.getElementById("@idButton").addEventListener("click", function() 
                {
                    newNumber = document.getElementById("@idWeight").innerHTML;
                    console.log(newNumber);

                    @{
                        node.UpdateWeightUpAndDown(newNumber, true);
                    }
                                        console.log(@root.GetTotalWeight());
                });

                </script>

                @{ count++; }
            </tr>
        }
    }
</table>